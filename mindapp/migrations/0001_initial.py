# Generated by Django 4.1.3 on 2023-08-30 07:02

import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import mindapp.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Badges',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(blank=True, max_length=100, null=True)),
                ('logo', models.ImageField(blank=True, null=True, upload_to=mindapp.models.name_file)),
                ('streak_length', models.IntegerField(unique=True)),
            ],
            options={
                'db_table': 'Badges',
                'ordering': ['streak_length'],
            },
        ),
        migrations.CreateModel(
            name='Coindetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(blank=True, max_length=100, null=True)),
                ('description', models.CharField(blank=True, max_length=500, null=True)),
                ('Image', models.ImageField(blank=True, null=True, upload_to=mindapp.models.name_file)),
                ('coinvalue', models.IntegerField(null=True)),
                ('entryrange', models.CharField(max_length=100, null=True)),
                ('coinvalue1', models.IntegerField(blank=True, null=True)),
                ('entryrange1', models.CharField(blank=True, max_length=100, null=True)),
                ('coinvalue2', models.IntegerField(blank=True, null=True)),
                ('entryrange2', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'Coindetails',
            },
        ),
        migrations.CreateModel(
            name='Journal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=250, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('transcript', models.TextField(blank=True, null=True)),
                ('audio', models.FileField(blank=True, null=True, upload_to=mindapp.models.name_file)),
                ('image', models.ImageField(blank=True, null=True, upload_to=mindapp.models.name_file)),
                ('emotions', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('text_to_speech', models.BooleanField(default=True)),
                ('entry_type', models.CharField(choices=[('audio', 'Audio'), ('text', 'Text')], max_length=10, null=True)),
                ('entry_length', models.FloatField(null=True)),
            ],
            options={
                'db_table': 'Journal',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('username', models.CharField(max_length=50, unique=True)),
                ('full_name', models.CharField(blank=True, max_length=50, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True, unique=True)),
                ('phone', models.CharField(blank=True, max_length=50, null=True, unique=True)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('gender', models.CharField(blank=True, choices=[('Male', 'Male'), ('Female', 'Female'), ('Others', 'Others')], max_length=10)),
                ('picture', models.ImageField(blank=True, null=True, upload_to=mindapp.models.nameFile)),
                ('zodiac_sign', models.CharField(blank=True, max_length=50, null=True)),
                ('fcm_token', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=1000), blank=True, default=list, null=True, size=None)),
                ('bio', models.TextField(blank=True, null=True)),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
                ('user_timezone', models.CharField(blank=True, max_length=50, null=True)),
                ('user_timezone_name', models.CharField(blank=True, max_length=150, null=True)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_admin', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='mindapp_users_groups', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='mindapp_users_permissions', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'User',
            },
            managers=[
                ('objects', mindapp.models.AccountManager()),
            ],
        ),
        migrations.CreateModel(
            name='UserBadge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateField(auto_now_add=True)),
                ('badge', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mindapp.badges')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mindapp.user')),
            ],
            options={
                'db_table': 'UserBadges',
            },
        ),
        migrations.CreateModel(
            name='Streaks',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('current_streak', models.IntegerField(default=0, null=True)),
                ('highest_streak', models.IntegerField(blank=True, default=0, null=True)),
                ('week_start_date', models.DateField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('last_entry_date', models.DateField(blank=True, null=True)),
                ('streak_saver_used', models.BooleanField(default=False)),
                ('streak_saver_used_datetime', django.contrib.postgres.fields.ArrayField(base_field=models.DateField(), blank=True, default=list, null=True, size=None)),
                ('entry_type', models.CharField(blank=True, choices=[('text', 'Text'), ('audio', 'Audio')], max_length=10, null=True)),
                ('entry_length', models.IntegerField(null=True)),
                ('journals', models.ManyToManyField(blank=True, to='mindapp.journal')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mindapp.user')),
            ],
            options={
                'db_table': 'Streaks',
            },
        ),
        migrations.AddField(
            model_name='journal',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mindapp.user'),
        ),
        migrations.CreateModel(
            name='Coins',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('coins', models.IntegerField(default=0)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='mindapp.user')),
            ],
            options={
                'db_table': 'Coins',
            },
        ),
        migrations.AddField(
            model_name='badges',
            name='users',
            field=models.ManyToManyField(related_name='badges', through='mindapp.UserBadge', to='mindapp.user'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['username'], name='User_usernam_1d735a_idx'),
        ),
    ]
